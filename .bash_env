# .bash_env
# =========
# This file contains environment variables that should be available to all bash sessions.
# It should be sourced from .bash_profile and .bashrc to ensure consistency.
# Keep this file lean and fast, as it affects startup time.

# Only source once to avoid duplicate PATH entries
[[ -n "$BASH_ENV_LOADED" ]] && return
export BASH_ENV_LOADED=1

# Locale Settings
# ===============
export LANG="en_US.UTF-8"
export LC_ALL="en_US.UTF-8"
export LC_CTYPE="en_US.UTF-8"

# XDG Base Directory Specification
# =================================
export XDG_CONFIG_HOME="${XDG_CONFIG_HOME:-$HOME/.config}"
export XDG_DATA_HOME="${XDG_DATA_HOME:-$HOME/.local/share}"
export XDG_STATE_HOME="${XDG_STATE_HOME:-$HOME/.local/state}"
export XDG_CACHE_HOME="${XDG_CACHE_HOME:-$HOME/.cache}"
export XDG_RUNTIME_DIR="${XDG_RUNTIME_DIR:-/tmp/runtime-$USER}"

# Create XDG directories if they don't exist
[[ ! -d "$XDG_CONFIG_HOME" ]] && mkdir -p "$XDG_CONFIG_HOME"
[[ ! -d "$XDG_DATA_HOME" ]] && mkdir -p "$XDG_DATA_HOME"
[[ ! -d "$XDG_STATE_HOME" ]] && mkdir -p "$XDG_STATE_HOME"
[[ ! -d "$XDG_CACHE_HOME" ]] && mkdir -p "$XDG_CACHE_HOME"

# PATH Configuration
# ==================
# Helper function to add to PATH if directory exists
add_to_path() {
    if [[ -d "$1" ]] && [[ ":$PATH:" != *":$1:"* ]]; then
        PATH="$1:$PATH"
    fi
}

# Add user directories
add_to_path "$HOME/bin"
add_to_path "$HOME/.local/bin"

# macOS specific paths (Homebrew)
if [[ "$OSTYPE" == "darwin"* ]]; then
    # Apple Silicon Homebrew
    add_to_path "/opt/homebrew/bin"
    add_to_path "/opt/homebrew/sbin"

    # Intel Homebrew (fallback)
    add_to_path "/usr/local/bin"
    add_to_path "/usr/local/sbin"

    # Homebrew formula paths
    add_to_path "/opt/homebrew/opt/ruby/bin"
    add_to_path "/opt/homebrew/opt/python@3.11/bin"
    add_to_path "/opt/homebrew/opt/openjdk/bin"
    add_to_path "/opt/homebrew/opt/gnu-sed/libexec/gnubin"
    add_to_path "/opt/homebrew/opt/grep/libexec/gnubin"
    add_to_path "/opt/homebrew/opt/coreutils/libexec/gnubin"
    add_to_path "/opt/homebrew/opt/findutils/libexec/gnubin"
fi

# Linux specific paths
if [[ "$OSTYPE" == "linux-gnu"* ]]; then
    add_to_path "/usr/local/bin"
    add_to_path "/usr/local/sbin"
    add_to_path "/snap/bin"
    add_to_path "$HOME/.cargo/bin"
fi

# Development tool paths
add_to_path "$HOME/.cargo/bin"
add_to_path "$HOME/go/bin"
add_to_path "$HOME/.npm-global/bin"
add_to_path "/usr/local/cuda/bin"

# Clean up helper function
unset -f add_to_path

# Export the PATH
export PATH

# Editor and Pager
# ================
export EDITOR="vi"
export VISUAL="vi"

# Override with better editors if available
if command -v nvim >/dev/null 2>&1; then
    export EDITOR="nvim"
    export VISUAL="nvim"
elif command -v vim >/dev/null 2>&1; then
    export EDITOR="vim"
    export VISUAL="vim"
fi

export PAGER="less"
export MANPAGER="less -X" # Don't clear screen after quitting man

# Less configuration
export LESS="-R -F -X -M -i -J --tabs=4"
export LESSHISTFILE="${XDG_STATE_HOME}/less/history"
[[ ! -d "${XDG_STATE_HOME}/less" ]] && mkdir -p "${XDG_STATE_HOME}/less"

# History Configuration
# =====================
export HISTFILE="${XDG_STATE_HOME}/bash/history"
export HISTSIZE=50000
export HISTFILESIZE=50000
export HISTTIMEFORMAT="%Y-%m-%d %H:%M:%S  "
export HISTCONTROL="ignoreboth:erasedups"

# Create history directory
[[ ! -d "${XDG_STATE_HOME}/bash" ]] && mkdir -p "${XDG_STATE_HOME}/bash"

# Compilation flags
# =================
export ARCHFLAGS="-arch $(uname -m)"

# Tool-specific Environment Variables
# ===================================

# FZF Configuration
export FZF_DEFAULT_OPTS="
    --height=50%
    --layout=reverse
    --border
    --inline-info
    --color=dark
    --color=fg:-1,bg:-1,hl:#5fff87,fg+:-1,bg+:-1,hl+:#ffaf5f
    --color=info:#af87ff,prompt:#5fff87,pointer:#ff87d7,marker:#ff87d7,spinner:#ff87d7
    --bind='ctrl-u:page-up,ctrl-d:page-down'
"

# Ripgrep configuration
export RIPGREP_CONFIG_PATH="${XDG_CONFIG_HOME}/ripgrep/config"

# Bat (cat replacement) configuration
export BAT_CONFIG_PATH="${XDG_CONFIG_HOME}/bat/config"

# GPG configuration
export GNUPGHOME="${XDG_DATA_HOME}/gnupg"

# Docker configuration
export DOCKER_CONFIG="${XDG_CONFIG_HOME}/docker"

# Wget configuration
export WGETRC="${XDG_CONFIG_HOME}/wget/wgetrc"

# Ruby gems
export GEM_HOME="${XDG_DATA_HOME}/gem"
export GEM_SPEC_CACHE="${XDG_CACHE_HOME}/gem"

# Node.js
export NODE_REPL_HISTORY="${XDG_DATA_HOME}/node_repl_history"
export NPM_CONFIG_USERCONFIG="${XDG_CONFIG_HOME}/npm/npmrc"

# Python
export PYTHONPYCACHEPREFIX="${XDG_CACHE_HOME}/python"
export PYTHONUSERBASE="${XDG_DATA_HOME}/python"

# Rust
export RUSTUP_HOME="${XDG_DATA_HOME}/rustup"
export CARGO_HOME="${XDG_DATA_HOME}/cargo"

# Go
export GOPATH="${XDG_DATA_HOME}/go"
export GOCACHE="${XDG_CACHE_HOME}/go-build"

# Platform-specific Environment Variables
# ========================================

# macOS specific
if [[ "$OSTYPE" == "darwin"* ]]; then
    # Enable colors in terminal
    export CLICOLOR=1
    export LSCOLORS="GxFxCxDxBxegedabagaced"

    # Homebrew
    export HOMEBREW_NO_ANALYTICS=1
    export HOMEBREW_NO_AUTO_UPDATE=1
    export HOMEBREW_BAT=1
    export HOMEBREW_PREFIX="/opt/homebrew"

    # Disable macOS session restore for Terminal
    export SHELL_SESSION_HISTORY=0
fi

# Linux specific
if [[ "$OSTYPE" == "linux-gnu"* ]]; then
    export LS_COLORS="di=1;36:ln=1;35:so=1;32:pi=1;33:ex=1;31:bd=34;46:cd=34;43:su=30;41:sg=30;46:tw=30;42:ow=34;43"
fi

# Security
# ========
# Don't add duplicate entries to history from concurrent sessions
export HISTCONTROL="ignoreboth:erasedups"

# Umask - Default file permissions (owner: rw-, group: r--, other: r--)
umask 022

# Performance optimizations
# =========================
# Don't check for mail
unset MAILCHECK

# Load local environment variables if they exist
# ==============================================
[[ -r "$HOME/.bash_env.local" ]] && source "$HOME/.bash_env.local"
